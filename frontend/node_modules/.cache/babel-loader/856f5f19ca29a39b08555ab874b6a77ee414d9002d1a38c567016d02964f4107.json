{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chern\\\\Documents\\\\GitHub\\\\projetjava\\\\frontend\\\\src\\\\components\\\\todo\\\\security\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { apiClient } from \"../api/ApiClient\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  //3: Put some state in the context\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n\n  // function login(username, password) {\n  //     if(username==='in28minutes' && password==='dummy'){\n  //         setAuthenticated(true)\n  //         setUsername(username)\n  //         return true            \n  //     } else {\n  //         setAuthenticated(false)\n  //         setUsername(null)\n  //         return false\n  //     }        \n  // }\n\n  async function login(username, password) {\n    const baToken = 'Basic ' + window.btoa(username + \":\" + password);\n    try {\n      const response = await executeBasicAuthenticationService(baToken);\n      if (response.status == 200) {\n        setAuthenticated(true);\n        setUsername(username);\n        setToken(baToken);\n        apiClient.interceptors.request.use(config => {\n          console.log('intercepting and adding a token');\n          config.headers.Authorization = baToken;\n          return config;\n        });\n        return true;\n      } else {\n        logout();\n        return false;\n      }\n    } catch (error) {\n      logout();\n      return false;\n    }\n  }\n  function logout() {\n    setAuthenticated(false);\n    setToken(null);\n    setUsername(null);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"TN8WqXx3uVoSLaFezWMtgn1oPEU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","apiClient","executeBasicAuthenticationService","AuthContext","useAuth","AuthProvider","children","isAuthenticated","setAuthenticated","username","setUsername","token","setToken","login","password","baToken","window","btoa","response","status","interceptors","request","use","config","console","log","headers","Authorization","logout","error"],"sources":["C:/Users/chern/Documents/GitHub/projetjava/frontend/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { apiClient } from \"../api/ApiClient\";\r\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\r\n\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport default function AuthProvider({ children }) {\r\n\r\n    //3: Put some state in the context\r\n    const [isAuthenticated, setAuthenticated] = useState(false)\r\n\r\n    const [username, setUsername] = useState(null)\r\n\r\n    const [token, setToken] = useState(null)\r\n\r\n    // function login(username, password) {\r\n    //     if(username==='in28minutes' && password==='dummy'){\r\n    //         setAuthenticated(true)\r\n    //         setUsername(username)\r\n    //         return true            \r\n    //     } else {\r\n    //         setAuthenticated(false)\r\n    //         setUsername(null)\r\n    //         return false\r\n    //     }        \r\n    // }\r\n\r\n    async function login(username, password) {\r\n\r\n        const baToken = 'Basic ' + window.btoa( username + \":\" + password )\r\n\r\n        try {\r\n\r\n            const response = await executeBasicAuthenticationService(baToken)\r\n\r\n            if(response.status==200){\r\n                setAuthenticated(true)\r\n                setUsername(username)\r\n                setToken(baToken)\r\n\r\n                apiClient.interceptors.request.use(\r\n                    (config) => {\r\n                        console.log('intercepting and adding a token')\r\n                        config.headers.Authorization = baToken\r\n                        return config\r\n                    }\r\n                )\r\n                \r\n                return true            \r\n            } else {\r\n                logout()\r\n                return false\r\n            }    \r\n        } catch(error) {\r\n            logout()\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    function logout() {\r\n        setAuthenticated(false)\r\n        setToken(null)\r\n        setUsername(null)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={ {isAuthenticated, login, logout, username, token}  }>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n} "],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,iCAAiC,QAAQ,6BAA6B;AAAC;AAGhF,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAE1C,OAAO,MAAMM,OAAO,GAAG;EAAA;EAAA,OAAML,UAAU,CAACI,WAAW,CAAC;AAAA;AAAA,GAAvCC,OAAO;AAEpB,eAAe,SAASC,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAE7C;EACA,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAea,KAAK,CAACJ,QAAQ,EAAEK,QAAQ,EAAE;IAErC,MAAMC,OAAO,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAAER,QAAQ,GAAG,GAAG,GAAGK,QAAQ,CAAE;IAEnE,IAAI;MAEA,MAAMI,QAAQ,GAAG,MAAMhB,iCAAiC,CAACa,OAAO,CAAC;MAEjE,IAAGG,QAAQ,CAACC,MAAM,IAAE,GAAG,EAAC;QACpBX,gBAAgB,CAAC,IAAI,CAAC;QACtBE,WAAW,CAACD,QAAQ,CAAC;QACrBG,QAAQ,CAACG,OAAO,CAAC;QAEjBd,SAAS,CAACmB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;UACRC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAC9CF,MAAM,CAACG,OAAO,CAACC,aAAa,GAAGZ,OAAO;UACtC,OAAOQ,MAAM;QACjB,CAAC,CACJ;QAED,OAAO,IAAI;MACf,CAAC,MAAM;QACHK,MAAM,EAAE;QACR,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXD,MAAM,EAAE;MACR,OAAO,KAAK;IAChB;EACJ;EAGA,SAASA,MAAM,GAAG;IACdpB,gBAAgB,CAAC,KAAK,CAAC;IACvBI,QAAQ,CAAC,IAAI,CAAC;IACdF,WAAW,CAAC,IAAI,CAAC;EACrB;EAEA,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAG;MAACH,eAAe;MAAEM,KAAK;MAAEe,MAAM;MAAEnB,QAAQ;MAAEE;IAAK,CAAI;IAAA,UAC7EL;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B;AAAC,IAjEuBD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}